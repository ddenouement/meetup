get_all_meetings=\
  SELECT m.id, m.id_speaker, m.id_language, m.id_topic, m.id_state, m.title, m.start_time, \
  m.duration_minutes, m.min_attendees, m.max_attendees, m.description, \
  u.login AS speaker_login, u.first_name AS speaker_first_name, u.last_name AS speaker_last_name, \
  u.rate AS speaker_rate, u.num_rates AS speaker_num_rates, \
  l.name AS language_name, t.name AS topic_name \
  FROM meetups m INNER JOIN users u on m.id_speaker = u.id \
  INNER JOIN languages l on m.id_language = l.id \
  INNER JOIN topics t on m.id_topic = t.id \
  WHERE u.active = TRUE AND \
  m.id_state IN (select id from meetup_states where name = 'SCHEDULED' or name = 'BOOKED') \
  ORDER BY m.start_time ASC;

get_all_meetups_count=\
  SELECT COUNT(*) \
  FROM meetups \
  WHERE id_speaker IN (SELECT users.id FROM users WHERE active = TRUE) \
  AND id_state IN (select id from meetup_states where name = 'SCHEDULED' or name = 'BOOKED');

get_all_meetups_by_pages=\
  SELECT m.id, m.id_speaker, m.id_language, m.id_topic, m.id_state, m.title, m.start_time, \
  m.duration_minutes, m.min_attendees, m.max_attendees, m.description, \
  u.login AS speaker_login, u.first_name AS speaker_first_name, u.last_name AS speaker_last_name, \
  u.rate AS speaker_rate, u.num_rates AS speaker_num_rates, \
  l.name AS language_name, t.name AS topic_name \
  FROM meetups m INNER JOIN users u on m.id_speaker = u.id \
  INNER JOIN languages l on m.id_language = l.id \
  INNER JOIN topics t on m.id_topic = t.id \
  WHERE u.active = TRUE AND \
  m.id_state IN (select id from meetup_states where name = 'SCHEDULED' or name = 'BOOKED') \
  ORDER BY m.start_time ASC \
  OFFSET :offset \
  LIMIT :limit;
get_meetups_by_start_time=\
  select id, id_speaker, id_language, id_topic, id_state, title, start_time, \
  duration_minutes, min_attendees, max_attendees, description \
  from meetups \
  where id_speaker IN (select users.id from users where active=TRUE) \
  and start_time = :start_time \
  and id_state IN (select id from meetup_states where name = 'SCHEDULED' or name = 'BOOKED');

get_speaker_meetings=select meetups.id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
                     from meetups where id_speaker=:id_speaker;

insert_new_meetup=\
  insert into meetups \
  (id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, \
  min_attendees, max_attendees, description) \
  values(:id_speaker, :id_language, :id_topic, :id_state, :title, :start_time, :duration_minutes, \
  :min_attendees, :max_attendees, :description);

update_meetup=\
  update meetups set id_speaker = :id_speaker, id_language = :id_language, id_topic = :id_topic, \
  id_state = :id_state, title = :title, start_time = :start_time, \
  duration_minutes = :duration_minutes, min_attendees = :min_attendees, \
  max_attendees = :max_attendees, description = :description \
  where id = :id;

add_topic_to_meeting=\
  update meetups set id_topic = :id_topic \
  where id = :id

find_topic_id=\
  select id \
  from topics \
  where name = :name;

future_joined_meetups_of_user=\
  select meetups.id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
  from meetups inner join meetups_users on meetups.id=meetups_users.id_meetup \
  inner join users on users.id=meetups_users.id_user \
  where users.id=:id_user AND id_speaker IN (select users.id from users where users.active=TRUE) \
  AND meetups.id_state IN (select id from meetup_states where name='SCHEDULED' or name='BOOKED') \
  order by meetups.start_time asc;

find_if_user_joined_meetup=   SELECT id_meetup_list.id \
                              FROM (SELECT m.id \
                                    FROM meetups m INNER JOIN meetups_users m_u ON m.id = m_u.id_meetup \
                                                   INNER JOIN users u ON u.id = m_u.id_user \
                                    WHERE u.id = :id_user \
                                    AND m.id_speaker IN (SELECT id \
                                                         FROM users \
                                                         WHERE users.active = TRUE) \
                                    AND m.id_state IN (SELECT id \
                                                       FROM meetup_states \
                                                       WHERE name='SCHEDULED' OR name='BOOKED')\
                                    ) id_meetup_list \
                              WHERE id_meetup_list.id = :id_meetup;

past_joined_meetups_of_user=\
  select meetups.id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
  from meetups inner join meetups_users on meetups.id=meetups_users.id_meetup \
  inner join users on users.id=meetups_users.id_user \
  where users.id=:id_user AND id_speaker IN (select users.id from users where users.active=TRUE) \
  AND meetups.id_state IN (select id from meetup_states where name='PASSED' or name='IN PROGRESS' or name='TERMINATED') \
  order by meetups.start_time desc;

future_hosted_meetings_of_user=\
  select meetups.id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
  from meetups \
  where id_speaker=:id_speaker AND meetups.id_state IN (select id from meetup_states where name='SCHEDULED' or name='BOOKED') \
  order by meetups.start_time asc;

past_hosted_meetings_of_user=\
  select meetups.id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
  from meetups \
  where id_speaker=:id_speaker AND meetups.id_state IN (select id from meetup_states where name='PASSED' or name='IN PROGRESS' or name='TERMINATED') \
  order by meetups.start_time desc;

add_user_to_meetup=insert into meetups_users (id_meetup, id_user) values (:id_meetup, :id_user)
remove_user_from_meetup=delete from meetups_users where id_meetup = :id_meetup and id_user = :id_user
remove_all_users_from_meetup=delete from meetups_users where id_meetup = :id_meetup
get_users_on_meetup=select  u.id, u.login, u.email, u.password, u.first_name, u.last_name, u.active, u.about, u.rate, u.num_rates \
                    from users u inner join meetups_users mu on u.id = mu.id_user \
                    where mu.id_meetup = :meetup_id AND u.active = TRUE;

get_joined_count = SELECT COUNT (*) \
                   FROM users u INNER JOIN meetups_users mu ON u.id = mu.id_user \
                   WHERE mu.id_meetup = :meetup_id AND u.active = TRUE;

find_meetup_by_id=\
  select id, id_speaker, id_language, id_topic, id_state, title, start_time, duration_minutes, min_attendees, max_attendees, description \
  from meetups where id = :id

get_display_meetup_by_id=\
  SELECT m.id, m.id_speaker, m.id_language, m.id_topic, m.id_state, m.title, m.start_time, \
  m.duration_minutes, m.min_attendees, m.max_attendees, m.description, \
  u.login AS speaker_login, u.first_name AS speaker_first_name, u.last_name AS speaker_last_name, \
  u.rate AS speaker_rate, u.num_rates AS speaker_num_rates, \
  l.name AS language_name, t.name AS topic_name \
  FROM meetups m INNER JOIN users u on m.id_speaker = u.id \
  INNER JOIN languages l on m.id_language = l.id \
  INNER JOIN topics t on m.id_topic = t.id \
  WHERE m.id = :id;

rate_meetup=update meetups_users set speaker_rate = :speaker_rate, speaker_feedback = :speaker_feedback, time_posted = :time_posted \
            where id_meetup = :id_meetup and id_user = :id_user

get_speaker_rate_from_meetup = SELECT speaker_rate \
                               FROM meetups_users \
                               WHERE id_meetup = :id_meetup and id_user = :id_user


set_cancelled_to_meetups=update meetups set id_state = 4 where (id_state = 2 OR id_state = 3) AND (start_time < :time_now_utc_zero)